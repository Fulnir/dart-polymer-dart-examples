// Auto-generated from index.html.
// DO NOT EDIT.

library index_html;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:mdv/mdv.dart' as autogenerated_mdv;
import 'package:observe/observe.dart' as __observe;
import 'package:polymer/polymer.dart' as autogenerated;
import 'index.html_my_element.dart';
import 'dart:html';
import 'package:mdv/mdv.dart' as mdv;


// Original code


main() {
  mdv.initialize();
}
// Additional generated code
void init_autogenerated() {
  autogenerated.registerPolymerElement(new autogenerated.Element.html('<element name="my-element" extends="div">\n      <template>\n        <p>\n          <button on-click="showMessage">Show Message</button>\n          <button on-click="hideMessage">Hide Message</button>\n        </p>\n        \n        <p id="show" style="display:none">\n          You clicked Show.\n        </p>\n        \n        <p id="hide" style="display:none">\n          You clicked Hide.\n        </p>\n      </template>\n      \n      <script type="application/dart">\n        import \'package:polymer/polymer.dart\';\n        import \'dart:html\';\n        \n        class MyElement extends PolymerElement {\n          \n          void showMessage(Event e, var detail, Node target) {\n            shadowRoot.query(\'#show\').style.display = \'inline\';\n            shadowRoot.query(\'#hide\').style.display = \'none\';\n          }\n          \n          void hideMessage(Event e, var detail, Node target) {\n            shadowRoot.query(\'#show\').style.display = \'none\';\n            shadowRoot.query(\'#hide\').style.display = \'inline\';\n          }\n        }\n        \n      </script>\n    </element>'), () => new MyElement());
}

//# sourceMappingURL=index.dart.map